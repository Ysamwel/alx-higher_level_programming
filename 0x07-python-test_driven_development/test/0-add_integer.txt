0-add_integer module test cases
=================

0-add_integer has two integers/floats as the arg and it returns the sum of the two integers

Implementing ''0-add_integer''
====================

Importing the add_integer function from the module:
        >>> add_integer = __import__("0-add_integer").add_integer

Trying out signed integers:
>>> add_integer(1,2)
3

Confirming float addition:
>>> add_integer(7.3,0.2)
7

Check for both interger and float addition:
>>> add_integer(3.3,2)
5

Testing for negative numbers:
>>> add_integer(-3,-4)
-7

Errors
=======

Testing non-integers:
>>> add_integer("5",2)
TypeError: a must be an integer

Testing both non-integers:
>>> add_integer("3","3")
TypeError: a must be an integer

Testing float that needs to be converted to an integer:
>>> add_integer(2.3,5)
7

Test with a large integer:
>>> add_integer(499447692658326124957684,11)
499447692658326124957695

Testing large float that needs to be converted to an integer:
>>> add_integer(1e10,2.5e10)
35000000000
